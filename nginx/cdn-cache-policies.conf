# CDN and HTTP Cache Policies for AyazLogistics
# Comprehensive caching strategy with security and performance optimization

# Cache zones for different content types
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=500m inactive=30m use_temp_path=off;
proxy_cache_path /var/cache/nginx/images levels=1:2 keys_zone=image_cache:10m max_size=2g inactive=7d use_temp_path=off;

# Cache key variables
map $request_uri $cache_key {
    ~*\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ $scheme$proxy_host$request_uri;
    default $scheme$proxy_host$request_uri$http_accept_encoding;
}

# Cache bypass conditions
map $http_pragma $cache_bypass {
    "no-cache" 1;
    default 0;
}

map $http_cache_control $cache_bypass {
    "no-cache" 1;
    "no-store" 1;
    default 0;
}

# Cache status for monitoring
map $upstream_cache_status $cache_status {
    "HIT" "hit";
    "MISS" "miss";
    "EXPIRED" "expired";
    "STALE" "stale";
    "UPDATING" "updating";
    "REVALIDATED" "revalidated";
    "BYPASS" "bypass";
    default "unknown";
}

# Main server block with CDN policies
server {
    listen 80;
    listen 443 ssl http2;
    server_name api.ayazlogistics.com admin.ayazlogistics.com cdn.ayazlogistics.com;
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/ayazlogistics.crt;
    ssl_certificate_key /etc/ssl/private/ayazlogistics.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Cache control headers
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    add_header X-Cache-Status $cache_status always;
    
    # Static assets - Long-term caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /var/www/static;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/css application/javascript image/svg+xml;
        
        # Cache in proxy
        proxy_cache static_cache;
        proxy_cache_valid 200 1y;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        
        # Security headers for static content
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # API endpoints - Short-term caching with invalidation
    location /api/ {
        proxy_pass http://backend;
        proxy_cache api_cache;
        proxy_cache_key $scheme$proxy_host$request_uri$http_accept_encoding;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        
        # Cache bypass conditions
        proxy_cache_bypass $cache_bypass;
        proxy_no_cache $cache_bypass;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Cache-Status $cache_status;
        
        # Cache control based on response
        proxy_hide_header Cache-Control;
        add_header Cache-Control "public, max-age=300" always;
    }
    
    # Authentication endpoints - No caching
    location /api/auth/ {
        proxy_pass http://backend;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # WebSocket endpoints - No caching
    location /socket.io/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass 1;
        proxy_no_cache 1;
    }
    
    # Health check - No caching
    location /health {
        proxy_pass http://backend;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # Admin panel - Medium-term caching
    location / {
        proxy_pass http://frontend;
        proxy_cache static_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # Cache control for admin panel
        add_header Cache-Control "public, max-age=3600" always;
    }
}

# CDN-specific server block
server {
    listen 80;
    listen 443 ssl http2;
    server_name cdn.ayazlogistics.com;
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/ayazlogistics.crt;
    ssl_certificate_key /etc/ssl/private/ayazlogistics.key;
    
    # CORS headers for CDN
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    
    # Image optimization and caching
    location ~* \.(jpg|jpeg|png|gif|webp|avif)$ {
        root /var/www/cdn;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        
        # Image optimization
        image_filter resize 1920 1080;
        image_filter_jpeg_quality 85;
        image_filter_sharpen 0.5;
        
        # WebP support
        location ~* \.(jpg|jpeg|png)$ {
            add_header Vary "Accept";
            try_files $uri.webp $uri =404;
        }
    }
    
    # Video files
    location ~* \.(mp4|webm|ogg)$ {
        root /var/www/cdn;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Accept-Ranges bytes;
    }
    
    # Documents
    location ~* \.(pdf|doc|docx|xls|xlsx|ppt|pptx)$ {
        root /var/www/cdn;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        add_header Content-Disposition "inline";
    }
}

# Cache warming and invalidation
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    # Cache warming endpoint
    location /warm-cache {
        internal;
        proxy_pass http://backend;
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
    }
    
    # Cache invalidation endpoint
    location /purge-cache {
        internal;
        proxy_cache_purge api_cache $arg_key;
    }
}

# Rate limiting for cache abuse prevention
http {
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static_limit:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=cdn_limit:10m rate=100r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    
    # Apply rate limits
    server {
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 10;
        }
        
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            limit_req zone=static_limit burst=100 nodelay;
        }
        
        location /cdn/ {
            limit_req zone=cdn_limit burst=200 nodelay;
        }
    }
}

# Cache monitoring and metrics
server {
    listen 127.0.0.1:8081;
    server_name localhost;
    
    location /cache-stats {
        stub_status on;
        access_log off;
    }
    
    location /cache-keys {
        return 200 "Cache keys: $cache_key";
        add_header Content-Type text/plain;
    }
}
