# Edge Rate Limiting and Bot Management Configuration
# For CloudFlare/AWS CloudFront integration

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=search_limit:10m rate=50r/m;

# Bot detection and management
map $http_user_agent $is_bot {
    default 0;
    ~*bot 1;
    ~*crawler 1;
    ~*spider 1;
    ~*scraper 1;
    ~*curl 1;
    ~*wget 1;
    ~*python 1;
    ~*java 1;
    ~*php 1;
}

# Suspicious request patterns
map $request_uri $is_suspicious {
    default 0;
    ~*\.\./ 1;
    ~*<script 1;
    ~*union.*select 1;
    ~*drop.*table 1;
    ~*insert.*into 1;
    ~*delete.*from 1;
}

# Geographic restrictions (example for Turkey)
geo $allowed_country {
    default 0;
    192.168.0.0/16 1;
    10.0.0.0/8 1;
    172.16.0.0/12 1;
    # Add Turkish IP ranges
    5.0.0.0/8 1;
    31.0.0.0/8 1;
    37.0.0.0/8 1;
    46.0.0.0/8 1;
    78.0.0.0/8 1;
    81.0.0.0/8 1;
    85.0.0.0/8 1;
    88.0.0.0/8 1;
    95.0.0.0/8 1;
}

# Server block for edge rate limiting
server {
    listen 80;
    server_name api.ayazlogistics.com;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

    # Block suspicious requests
    if ($is_suspicious) {
        return 403 "Suspicious request detected";
    }

    # Block bots (except for legitimate ones)
    if ($is_bot) {
        return 403 "Bot access not allowed";
    }

    # Geographic restrictions
    if ($allowed_country = 0) {
        return 403 "Access denied from this location";
    }

    # API endpoints with different rate limits
    location /api/v1/auth/login {
        limit_req zone=login_limit burst=3 nodelay;
        limit_req_status 429;
        
        proxy_pass http://ayazlogistics-backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/v1/upload {
        limit_req zone=upload_limit burst=2 nodelay;
        limit_req_status 429;
        
        client_max_body_size 10M;
        proxy_pass http://ayazlogistics-backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/v1/search {
        limit_req zone=search_limit burst=10 nodelay;
        limit_req_status 429;
        
        proxy_pass http://ayazlogistics-backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # General API endpoints
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://ayazlogistics-backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://ayazlogistics-backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Block common attack patterns
    location ~* \.(php|asp|aspx|jsp)$ {
        return 404;
    }

    # Block access to sensitive files
    location ~* \.(env|config|log|sql|bak)$ {
        return 404;
    }

    # Block access to hidden files
    location ~ /\. {
        return 404;
    }
}
