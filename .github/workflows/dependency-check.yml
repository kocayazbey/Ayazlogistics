name: Dependency Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate
          npm audit --audit-level=high --json > audit-results.json

      - name: Check for vulnerabilities
        run: |
          # Check for high and critical vulnerabilities
          if npm audit --audit-level=high --json | jq '.vulnerabilities | length' | grep -q '[1-9]'; then
            echo "High or critical vulnerabilities found!"
            npm audit --audit-level=high
            exit 1
          fi

      - name: License compliance check
        run: |
          # Install license checker
          npm install -g license-checker
          
          # Check licenses
          license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense;CC0-1.0' --excludePrivatePackages
          
          # Generate license report
          license-checker --json --out license-report.json

      - name: Dependency pinning check
        run: |
          # Check if package-lock.json is committed
          if [ ! -f "package-lock.json" ]; then
            echo "package-lock.json not found! Please commit it."
            exit 1
          fi
          
          # Check for exact versions in package.json
          if grep -q "\"~" package.json || grep -q "\"^" package.json; then
            echo "Found version ranges in package.json. Consider pinning exact versions."
            exit 1
          fi

      - name: Outdated dependencies check
        run: |
          # Check for outdated dependencies
          npm outdated --json > outdated-deps.json
          
          # Check if any dependencies are outdated
          if [ -s outdated-deps.json ]; then
            echo "Outdated dependencies found:"
            cat outdated-deps.json
            echo "Consider updating dependencies."
          fi

      - name: Security scan with Snyk
        uses: snyk/actions/node@master
        continue-on-error: true
        with:
          args: --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-audit-results
          path: |
            audit-results.json
            license-report.json
            outdated-deps.json
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read audit results
            const auditResults = JSON.parse(fs.readFileSync('audit-results.json', 'utf8'));
            const licenseReport = JSON.parse(fs.readFileSync('license-report.json', 'utf8'));
            
            // Create comment
            const comment = `## 🔍 Dependency Check Results
            
            ### Security Audit
            - **Vulnerabilities Found**: ${auditResults.vulnerabilities ? Object.keys(auditResults.vulnerabilities).length : 0}
            - **Dependencies**: ${auditResults.dependencies ? Object.keys(auditResults.dependencies).length : 0}
            
            ### License Compliance
            - **Total Dependencies**: ${Object.keys(licenseReport).length}
            - **Compliant Licenses**: ${Object.values(licenseReport).filter(dep => 
              ['MIT', 'Apache-2.0', 'BSD-2-Clause', 'BSD-3-Clause', 'ISC', 'Unlicense', 'CC0-1.0'].includes(dep.licenses)
            ).length}
            
            ### Recommendations
            - Update outdated dependencies
            - Review license compliance
            - Address security vulnerabilities`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
