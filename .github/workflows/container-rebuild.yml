name: Container Rebuild

on:
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sunday at 2 AM
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all images'
        required: false
        default: 'false'
        type: boolean

jobs:
  rebuild-containers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.optimized
          push: true
          tags: |
            ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/backend:latest
            ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/admin-panel
          file: ./frontend/admin-panel/Dockerfile.optimized
          push: true
          tags: |
            ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/frontend:latest
            ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign images with Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.2.0'

      - name: Sign backend image
        run: |
          cosign sign --yes ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/backend:${{ github.sha }}

      - name: Sign frontend image
        run: |
          cosign sign --yes ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/frontend:${{ github.sha }}

      - name: Update Kubernetes manifests
        run: |
          # Update image tags in Kubernetes manifests
          sed -i "s|image: ayazlogistics/backend:.*|image: ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/backend:${{ github.sha }}|g" k8s/production/deployment.yaml
          sed -i "s|image: ayazlogistics/frontend:.*|image: ${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/frontend:${{ github.sha }}|g" k8s/production/deployment.yaml
          
          # Commit changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/production/deployment.yaml
          git commit -m "chore: update container images to ${{ github.sha }}"
          git push

      - name: Deploy to staging
        run: |
          # Deploy to staging environment
          kubectl apply -f k8s/staging/
          kubectl set image deployment/ayazlogistics-backend backend=${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/backend:${{ github.sha }} -n staging
          kubectl set image deployment/ayazlogistics-frontend frontend=${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/frontend:${{ github.sha }} -n staging

      - name: Run integration tests
        run: |
          # Wait for deployment to be ready
          kubectl rollout status deployment/ayazlogistics-backend -n staging --timeout=300s
          kubectl rollout status deployment/ayazlogistics-frontend -n staging --timeout=300s
          
          # Run integration tests
          npm run test:integration

      - name: Deploy to production
        if: success()
        run: |
          # Deploy to production environment
          kubectl apply -f k8s/production/
          kubectl set image deployment/ayazlogistics-backend backend=${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/backend:${{ github.sha }} -n production
          kubectl set image deployment/ayazlogistics-frontend frontend=${{ secrets.CONTAINER_REGISTRY }}/ayazlogistics/frontend:${{ github.sha }} -n production
          
          # Wait for rollout to complete
          kubectl rollout status deployment/ayazlogistics-backend -n production --timeout=600s
          kubectl rollout status deployment/ayazlogistics-frontend -n production --timeout=600s

      - name: Clean up old images
        run: |
          # Remove old images from registry
          # This would depend on your registry's API
          echo "Cleaning up old images..."
