apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@ayazlogistics.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ayazlogistics-tls
  namespace: production
spec:
  secretName: ayazlogistics-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - api.ayazlogistics.com
  - admin.ayazlogistics.com
  - www.ayazlogistics.com
  - ayazlogistics.com

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ayazlogistics-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "AYAZ_STICKY"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Simple bot/block list
      if ($http_user_agent ~* (?:masscan|nikto|sqlmap|nessus|acunetix|dirbuster|nmap)) {
        return 403;
      }
spec:
  tls:
  - hosts:
    - api.ayazlogistics.com
    - admin.ayazlogistics.com
    secretName: ayazlogistics-tls
  rules:
  - host: api.ayazlogistics.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ayazlogistics-backend
            port:
              number: 80
  - host: admin.ayazlogistics.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-panel
            port:
              number: 80

