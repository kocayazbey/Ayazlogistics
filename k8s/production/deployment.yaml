apiVersion: apps/v1
kind: Deployment
metadata:
  name: ayazlogistics-backend
  namespace: production
  labels:
    app: ayazlogistics
    component: backend
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ayazlogistics
      component: backend
  template:
    metadata:
      labels:
        app: ayazlogistics
        component: backend
        version: v1
    spec:
      containers:
      - name: backend
        image: ghcr.io/ayazlogistics/backend:1.0.0@sha256:abc123def456ghi789jkl012mno345pqr678stu901vwx
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ayazlogistics-secrets
              key: database-url
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: ayazlogistics-secrets
              key: redis-host
        - name: REDIS_PORT
          value: "6379"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ayazlogistics-secrets
              key: jwt-secret
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: ayazlogistics-secrets
              key: sendgrid-api-key
              optional: true
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: ayazlogistics-secrets
              key: sentry-dsn
              optional: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ayazlogistics-frontend
  namespace: production
  labels:
    app: ayazlogistics
    component: frontend
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ayazlogistics
      component: frontend
  template:
    metadata:
      labels:
        app: ayazlogistics
        component: frontend
        version: v1
    spec:
      containers:
      - name: frontend
        image: ghcr.io/ayazlogistics/frontend:1.0.0@sha256:def456ghi789jkl012mno345pqr678stu901vwx234abc
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.ayazlogistics.com"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 20
          successThreshold: 1
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
